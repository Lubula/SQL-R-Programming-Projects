<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/mapul/Downloads/archive/working on it.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1506"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,20:mainemployeeDemographics"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="EmployeeSalary" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="1"/></sort><column_widths><column index="1" value="83"/><column index="2" value="56"/><column index="3" value="49"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="employeeDemographics" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="83"/><column index="2" value="71"/><column index="3" value="71"/><column index="4" value="40"/><column index="5" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="movies" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="63"/><column index="3" value="65"/><column index="4" value="40"/><column index="5" value="222"/><column index="6" value="44"/><column index="7" value="67"/><column index="8" value="152"/><column index="9" value="155"/><column index="10" value="157"/><column index="11" value="96"/><column index="12" value="74"/><column index="13" value="81"/><column index="14" value="300"/><column index="15" value="58"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="temp" name="ExampleTable" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="152"/><column index="3" value="74"/><column index="4" value="81"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE employeeDemographics
( EmployeeID INT, 
FirstName varchar(50),
LastName varchar(50),
Age INT,
Gender varchard(50)
)

CREATE TABLE EmployeeSalary
( EmployeeID INT,
Jobtitle varchar(50),
Salary INT)

INSERT into employeeDemographics VALUES
(1001, &quot;Jim&quot;, &quot;Halpert&quot;, &quot;30&quot;, &quot;male&quot;),
(1002, 'Pam', 'Beasley', 30, 'Female'),
(1003, 'Dwight', 'Schrute', 29, 'Male'),
(1004, 'Angela', 'Martin', 31, 'Female'),
(1005, 'Toby', 'Flenderson', 32, 'Male'),
(1006, 'Michael', 'Scott', 35, 'Male'),
(1007, 'Meredith', 'Palmer', 32, 'Female'),
(1008, 'Stanley', 'Hudson', 38, 'Male'),
(1009, 'Kevin', 'Malone', 31, 'Male')

INSERT INTO EmployeeSalary VALUES
(1001, 'Salesman', 45000),
(1002, 'Receptionist', 36000),
(1003, 'Salesman', 63000),
(1004, 'Accountant', 47000),
(1005, 'HR', 50000),
(1006, 'Regional Manager', 65000),
(1007, 'Supplier Relations', 41000),
(1008, 'Salesman', 48000),
(1009, 'Accountant', 42000)


-- count, distint and limits
SELECT EmployeeID, Age
FROM employeeDemographics
LIMIT 5

SELECT DISTINCT(Gender)
FROM employeeDemographics

SELECT count(LastName)
FROM employeeDemographics

-- NAME IT / alias
SELECT count(LastName) AS LastNameCounter
FROM employeeDemographics

--max, min and average 
SELECT max(Salary)
from EmployeeSalary

SELECT avg(Salary)
FROM EmployeeSalary

SELECT min(Salary)
FROM EmployeeSalary

-- where statement 
SELECT * 
FROM employeeDemographics
WHERE FirstName = &quot;Jim&quot;

-- not  equal to in other SQL it &lt;&gt;
SELECT *
FROM employeeDemographics
WHERE NOT &quot;Jim&quot;

-- greater than or less than 
FROM employeeDemographics
WHERE Age &gt;= &quot;30&quot;

SELECT *
FROM employeeDemographics
WHERE Age &lt;= &quot;30&quot;

-- and statement
SELECT *
FROM employeeDemographics
WHERE Age &lt;= &quot;32&quot; AND Gender = &quot;male&quot;

--- or
SELECT *
FROM employeeDemographics
WHERE Age &gt;= &quot;32&quot; or Gender = &quot;male&quot;

--- wild card,  using it to find specifics
SELECT *
FROM employeeDemographics
WHERE LastName like &quot;S%&quot;

SELECT *
FROM employeeDemographics
WHERE LastName like &quot;%S%&quot;

SELECT *
FROM employeeDemographics
WHERE LastName like &quot;%S%o%&quot;

--- NULL
select *
FROM employeeDemographics
WHERE not NULL

-- in statement
select *
FROM employeeDemographics
WHERE FirstName in (&quot;Jim&quot;, &quot;Pam&quot;, &quot;Dwight&quot;)


select *
FROM employeeDemographics

-- group by
SELECT Gender, count(Gender)
FROM employeeDemographics
GROUP BY Gender

SELECT Gender, Age, count(Gender)
FROM employeeDemographics
where Age &gt; &quot;31&quot;
GROUP BY Gender

-- order by
SELECT * 
FROM employeeDemographics
ORDER BY Age DESC

SELECT * 
FROM employeeDemographics
ORDER BY Age, Gender

SELECT * 
FROM employeeDemographics
ORDER BY Age, Gender DESC

--- using the number instaed of column names
SELECT * 
FROM employeeDemographics
ORDER BY 4 DESC, 5 DESC</sql><current_tab id="0"/></tab_sql></sqlb_project>
