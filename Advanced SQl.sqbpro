<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/mapul/Downloads/archive/working on it.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="841"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,20:mainemployeeDemographics"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="EmployeeSalary" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="1"/></sort><column_widths><column index="1" value="83"/><column index="2" value="110"/><column index="3" value="49"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="WareHouseEmployeeDemographics" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="83"/><column index="2" value="71"/><column index="3" value="71"/><column index="4" value="40"/><column index="5" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="employeeDemographics" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="83"/><column index="2" value="71"/><column index="3" value="71"/><column index="4" value="40"/><column index="5" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="movies" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="63"/><column index="3" value="65"/><column index="4" value="40"/><column index="5" value="222"/><column index="6" value="44"/><column index="7" value="67"/><column index="8" value="152"/><column index="9" value="155"/><column index="10" value="157"/><column index="11" value="96"/><column index="12" value="74"/><column index="13" value="81"/><column index="14" value="300"/><column index="15" value="58"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="temp" name="ExampleTable" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="152"/><column index="3" value="74"/><column index="4" value="81"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE employeeDemographics
( EmployeeID INT, 
FirstName varchar(50),
LastName varchar(50),
Age INT,
Gender varchard(50)
)

CREATE TABLE EmployeeSalary
( EmployeeID INT,
Jobtitle varchar(50),
Salary INT)

INSERT into employeeDemographics VALUES
(1001, &quot;Jim&quot;, &quot;Halpert&quot;, &quot;30&quot;, &quot;male&quot;),
(1002, 'Pam', 'Beasley', 30, 'Female'),
(1003, 'Dwight', 'Schrute', 29, 'Male'),
(1004, 'Angela', 'Martin', 31, 'Female'),
(1005, 'Toby', 'Flenderson', 32, 'Male'),
(1006, 'Michael', 'Scott', 35, 'Male'),
(1007, 'Meredith', 'Palmer', 32, 'Female'),
(1008, 'Stanley', 'Hudson', 38, 'Male'),
(1009, 'Kevin', 'Malone', 31, 'Male')

INSERT INTO EmployeeSalary VALUES
(1001, 'Salesman', 45000),
(1002, 'Receptionist', 36000),
(1003, 'Salesman', 63000),
(1004, 'Accountant', 47000),
(1005, 'HR', 50000),
(1006, 'Regional Manager', 65000),
(1007, 'Supplier Relations', 41000),
(1008, 'Salesman', 48000),
(1009, 'Accountant', 42000)

-- join is default for inner join 
SELECT *
FROM employeeDemographics
JOIN EmployeeSalary
	on employeeDemographics.EmployeeID = EmployeeSalary.EmployeeID
	
-- lets work on outer JOIN
SELECT *
FROM employeeDemographics
LEFT OUTER JOIN EmployeeSalary
	on employeeDemographics.EmployeeID = EmployeeSalary.EmployeeID
	
	
SELECT *
FROM employeeDemographics
RIGHT OUTER JOIN EmployeeSalary
	on employeeDemographics.EmployeeID = EmployeeSalary.EmployeeID
	
SELECT employeeDemographics.EmployeeID, FirstName, LastName, Jobtitle, Salary
FROM employeeDemographics
JOIN EmployeeSalary
	on employeeDemographics.EmployeeID = EmployeeSalary.EmployeeID
	
SELECT EmployeeSalary.EmployeeID, FirstName, LastName, Jobtitle, Salary
FROM employeeDemographics
LEFT OUTER JOIN EmployeeSalary
	on employeeDemographics.EmployeeID = EmployeeSalary.EmployeeID
	
SELECT employeeDemographics.EmployeeID, FirstName, LastName, Salary
FROM employeeDemographics
JOIN EmployeeSalary
	on employeeDemographics.EmployeeID = EmployeeSalary.EmployeeID
WHERE employeeDemographics.EmployeeID &lt;&gt; &quot;1006&quot;
ORDER BY Salary DESC

SELECT EmployeeSalary.Jobtitle, avg(Salary)
FROM employeeDemographics
JOIN EmployeeSalary
	on employeeDemographics.EmployeeID = EmployeeSalary.EmployeeID
WHERE Jobtitle = &quot;Salesman&quot;
GROUP by Jobtitle


--- unions
---Table 1 Insert:
Insert into EmployeeDemographics VALUES
(1011, 'Ryan', 'Howard', 26, 'Male'),
(NULL, 'Holly', 'Flax', NULL, NULL),
(1013, 'Darryl', 'Philbin', NULL, 'Male')

-- Table 3 Query:
Create Table WareHouseEmployeeDemographics 
(EmployeeID int, 
FirstName varchar(50), 
LastName varchar(50), 
Age int, 
Gender varchar(50)
)

Table 3 Insert:
Insert into WareHouseEmployeeDemographics VALUES
(1013, 'Darryl', 'Philbin', NULL, 'Male'),
(1050, 'Roy', 'Anderson', 31, 'Male'),
(1051, 'Hidetoshi', 'Hasagawa', 40, 'Male'),
(1052, 'Val', 'Johnson', 31, 'Female')

SELECT *
FROM employeeDemographics
FULL OUTER JOIN WareHouseEmployeeDemographics
	on employeeDemographics.EmployeeID = WareHouseEmployeeDemographics.EmployeeID
	
SELECT *
FROM employeeDemographics

SELECT *
FROM WareHouseEmployeeDemographics

-- union removes duplicates
SELECT *
FROM employeeDemographics
UNION
SELECT *
FROM WareHouseEmployeeDemographics

SELECT *
FROM employeeDemographics
UNION ALL
SELECT *
FROM WareHouseEmployeeDemographics
ORDER BY EmployeeID

SELECT EmployeeID, FirstName, Age
FROM employeeDemographics
UNION
SELECT EmployeeID, Jobtitle, Salary
FROM EmployeeSalary
ORDER BY EmployeeID
--- be careful with unions as its dependant on whether they are the same data types but can still 
-- be diffret

--- case statement

SELECT FirstName, LastName, Age
FROM employeeDemographics
WHERE Age NOT NULL
ORDER BY Age
-- we build our case statement from the above QUERY
SELECT *
CASE 
	WHEN Age &gt; 30 THEN &quot;old&quot;
	ELSE &quot;young&quot;
END
FROM employeeDemographics
WHERE Age NOT NULL
ORDER BY Age

SELECT *
FROM employeeDemographics
JOIN EmployeeSalary
	ON employeeDemographics.EmployeeID = employeeDemographics.EmployeeID
	
SELECT FirstName, LastName, Jobtitle, Salary
FROM employeeDemographics
JOIN EmployeeSalary
	ON employeeDemographics.EmployeeID = employeeDemographics.EmployeeID
	
SELECT FirstName, LastName, Jobtitle, Salary
case
	WHEN Jobtitle = &quot;Salesman&quot; THEN Salary + (Salary * 0.10)
	WHEN Jobtitle = &quot;Accountant&quot;  THEN Salary + (Salary * 0.5)
	WHEN Jobtitle = &quot;HR&quot;  THEN Salary + (Salary * 0.1)
	ELSE Salary + (Salary * 0.3)
end as Salary_After_Raise
FROM employeeDemographics
JOIN EmployeeSalary
	ON employeeDemographics.EmployeeID = employeeDemographics.EmployeeID
	
--- lets work on updatng 
SELECT *
FROM employeeDemographics
JOIN EmployeeSalary
	on employeeDemographics.EmployeeID = EmployeeSalary.EmployeeID

SELECT *
FROM employeeDemographics

UPDATE employeeDemographics
SET EmployeeID = 1012
WHERE FirstName =  &quot;Holy&quot; and LastName = &quot;Falx&quot;

UPDATE employeeDemographics
SET Age = 31, Gender = &quot;Female&quot;
WHERE FirstName =  &quot;Holy&quot; and LastName = &quot;Falx&quot;

DELETE FROM employeeDemographics
WHERE EmployeeID = &quot;1005&quot;

SELECT *
FROM employeeDemographics</sql><current_tab id="0"/></tab_sql></sqlb_project>
